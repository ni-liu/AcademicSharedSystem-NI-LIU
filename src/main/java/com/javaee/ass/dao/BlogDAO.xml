<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.javaee.ass.dao.BlogDAO">
    <resultMap id="blogDOMap" type="blogDO">
        <id property="pkId" column="PK_ID"/>
        <result property="blogTitle" column="BLOG_TITLE"/>
        <result property="userId" column="USER_ID"/>
        <result property="blogContent" column="BLOG_CONTENT"/>
        <result property="blogAttachment" column="FILE_DOWNLOAD"/>
        <result property="launchTime" column="LAUNCH_TIME"/>
        <result property="authority" column="AUTHORITY"
                jdbcType="SMALLINT" javaType="com.javaee.ass.entity.enums.BlogAuthorityEnum"
                typeHandler="com.javaee.ass.entity.typehandler.AuthorityEnumTypeHandler"/>
        <result property="nickName" column="NICKNAME"/>
        <result property="courseId" column="COURSE_ID"/>
    </resultMap>

    <resultMap id="blogCommentDoMap" type="blogCommentDO">
        <id property="pkId" column="PK_ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="blogId" column="BLOG_ID"/>
        <result property="comments" column="COMMENTS"/>
        <result property="nickName" column="NICKNAME"/>
        <result property="time" column="TIMES"/>
    </resultMap>

    <resultMap id="blogBasicParamMap" type="BlogBasicParam">
        <id property="pkId" column="PK_ID"/>
        <result property="blogTitle" column="BLOG_TITLE"/>
        <result property="userId" column="USER_ID"/>
        <result property="blogContent" column="BLOG_CONTENT"/>
        <result property="blogAttachment" column="FILE_DOWNLOAD"/>
        <result property="launchTime" column="LAUNCH_TIME"/>
        <result property="authority" column="AUTHORITY"
                jdbcType="SMALLINT" javaType="com.javaee.ass.entity.enums.BlogAuthorityEnum"
                typeHandler="com.javaee.ass.entity.typehandler.AuthorityEnumTypeHandler"/>
        <result property="nickName" column="NICKNAME"/>
    </resultMap>



    <insert id="insertBlog">
        INSERT INTO ASS_BLOG(USER_ID,BLOG_TITLE,BLOG_CONTENT,FILE_DOWNLOAD,LAUNCH_TIME,AUTHORITY,COURSE_ID)
            VALUES (#{userId, mode = IN},
                    #{blogTitle, mode = IN},
                    #{blogContent, mode = IN},
                    #{blogAttachment, mode = IN},
                    to_date(#{launchTime, mode = IN},'yyyy-MM-dd hh24:mi:ss'),
                    #{authority, mode = IN},
                    #{courseId, mode = IN})
    </insert>

    <insert id="insertBlogReport">
        INSERT INTO ASS_REPORT_BLOG(USER_ID, BLOG_ID, REASON, TIME, OPERATE_STATUS)
            VALUES (#{userId, mode = IN},
                    #{blogId, mode = IN},
                    #{reason, mode = IN},
                    to_date(#{time, mode = IN},'yyyy-MM-dd hh24:mi:ss'),to_number('1'))
    </insert>

    <select id="listBlogByUserNickname" resultMap="blogDOMap">
        SELECT PK_ID, BLOG_TITLE, USER_ID, BLOG_CONTENT, FILE_DOWNLOAD,LAUNCH_TIME ,AUTHORITY, NICKNAME
        FROM TABLE(PACK_SELECT.FN_LISTBLOGBYUSERNICKNAME(#{pageNow},#{pageSize},#{nickName}))
    </select>
    
    <select id="ListBlogByBlogTitle" resultMap="blogDOMap">
        SELECT PK_ID, BLOG_TITLE, USER_ID, BLOG_CONTENT, FILE_DOWNLOAD,LAUNCH_TIME ,AUTHORITY, NICKNAME
        FROM TABLE(PACK_SELECT.FN_LISTBLOGBYBLOGTITLE(#{pageNow},#{pageSize},#{blogTitle}))
    </select>

    <select id="ListOwnBlog" resultMap="blogDOMap">
        SELECT PK_ID, BLOG_TITLE, USER_ID, BLOG_CONTENT, FILE_DOWNLOAD,LAUNCH_TIME ,AUTHORITY, NICKNAME
        FROM TABLE(PACK_SELECT.FN_LISTOWNBLOG(#{pageNow},#{pageSize},#{userId}))
    </select>

    <select id="ListAllBlog" resultMap="blogDOMap">
        SELECT PK_ID, BLOG_TITLE, USER_ID, BLOG_CONTENT, FILE_DOWNLOAD,LAUNCH_TIME ,AUTHORITY, NICKNAME
        FROM TABLE(PACK_SELECT.FN_LISTALLBLOG(#{pageNow},#{pageSize}))
    </select>

    <select id="SelectBlogByInfo" resultMap="blogDOMap">
        SELECT PK_ID, BLOG_TITLE, USER_ID, BLOG_CONTENT, FILE_DOWNLOAD,LAUNCH_TIME ,AUTHORITY, NICKNAME
        FROM TABLE(PACK_SELECT.FN_LISTBLOGBYINFO(#{pageNow},#{pageSize},#{blogInfo}))
    </select>

    <select id="SelectBlogById" resultMap="blogDOMap">
        SELECT B.PK_ID, B.BLOG_TITLE, B.USER_ID, B.BLOG_CONTENT, B.FILE_DOWNLOAD,B.LAUNCH_TIME, B.AUTHORITY, U.NICKNAME
        FROM ASS_BLOG B LEFT JOIN ASS_USER U ON U.PK_ID = B.USER_ID
        WHERE B.AUTHORITY = 2 AND B.PK_ID = #{blogId, mode = IN}
    </select>

    <select id="SelectBlogCommentByBlogId" resultMap="blogCommentDoMap">
        SELECT PK_ID, BLOG_ID, USER_ID, COMMENTS, NICKNAME, TIMES
        FROM TABLE(PACK_SELECT.FN_LISTBLOGCOMMENTBYID(#{pageNow},#{pageSize},#{blogId}))
    </select>

    <select id="SelectBlogByCourseId"  resultMap="blogDOMap">
        SELECT PK_ID, BLOG_TITLE, USER_ID, BLOG_CONTENT, FILE_DOWNLOAD,LAUNCH_TIME ,AUTHORITY, NICKNAME
        FROM TABLE(PACK_SELECT.FN_LISTBLOGBYCOURSEID(#{pageNow},#{pageSize},#{courseId}))
    </select>

    <insert id="insertBlogComment">
        INSERT INTO ASS_COMMENT_BLOG(USER_ID, BLOG_ID, COMMENTS, TIMES)
            VALUES (
                #{userId, mode = IN},
                #{blogId, mode = IN},
                #{comment, mode = IN},
                to_date(#{time, mode = IN},'yyyy-MM-dd hh24:mi:ss')
            )
    </insert>

    <delete id="deleteByPkId" statementType="CALLABLE" parameterType="String">
        {CALL PACK_DELETE.PRO_DELETE_BLOG(#{pkId , mode = IN})}
    </delete>

</mapper>